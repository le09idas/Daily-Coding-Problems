Daily Coding Problem for May 28 2019

This question was asked by Microsoft.

Let's represent an integer in a linked list
format by having each node represent a digit
in the number. The nodes make up the number in reversed order.

For example, the following linked list:

1 -> 2 -> 3 -> 4 -> 5

is the number 54321.

Given two linked lists in this format,
return their sum in the same linked list
format.

For example, given

9 -> 9
5 -> 2

return 124(99 + 25) as:

4 -> 2 -> 1

Given:
two linked lists that represent numbers in little-endian

Initial thought:
So, I first think of how numbers are usually added:
we start from the end and work our way to the front.
The way this list represents the number, we don't 
have to worry about negotiating the order. 

However, an initial challenge would be carrying.  Or is 
it a challenge? No matter what two digits you add, at most
you'll have to carry a 1.  Now another challeng is how to 
add the two numbers and upon getting a sum, retain only the
terminating digit? Maybe modulo it with 10?