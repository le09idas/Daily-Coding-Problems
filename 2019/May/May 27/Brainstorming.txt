Daily Coding Problem for May 27 2019

This problem was asked by Facebook.

Write a function that rotates a list by 
k elements. For example, 
[1, 2, 3, 4, 5, 6] rotated by two 
becomes [3, 4, 5, 6, 1, 2]. Try solving
this without creating a copy of the list.
How many swap or move operations do you need?

Given:
An array of integers, or other possible items.
A number k which is how many  the list rotates by

Initial thought:
We may just need to have a temporary item to hold the 
initial values of the list, move everything up, and then replace
the last item with the first element. Repeat this k - 1 times.